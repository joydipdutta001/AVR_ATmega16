
P3_Double_Seven_Segment.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000012e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  0000012e  000001a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001b6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001e8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006be  00000000  00000000  00000244  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005e6  00000000  00000000  00000902  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002b2  00000000  00000000  00000ee8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  0000119c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000399  00000000  00000000  000011d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000147  00000000  00000000  00001569  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000016b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e2       	ldi	r30, 0x2E	; 46
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 95 00 	jmp	0x12a	; 0x12a <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#define Direction_led2 DDRC
#define Port_led PORTD
#define Port_led2 PORTC

int main(void)
{
  82:	cf 93       	push	r28
  84:	df 93       	push	r29
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	64 97       	sbiw	r28, 0x14	; 20
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
	Direction_led = Direction_led2 = 0xff;
  96:	8f ef       	ldi	r24, 0xFF	; 255
  98:	84 bb       	out	0x14, r24	; 20
  9a:	81 bb       	out	0x11, r24	; 17
	int n[10]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90};
  9c:	84 e1       	ldi	r24, 0x14	; 20
  9e:	e0 e6       	ldi	r30, 0x60	; 96
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	de 01       	movw	r26, r28
  a4:	11 96       	adiw	r26, 0x01	; 1
  a6:	01 90       	ld	r0, Z+
  a8:	0d 92       	st	X+, r0
  aa:	8a 95       	dec	r24
  ac:	e1 f7       	brne	.-8      	; 0xa6 <main+0x24>
	unsigned int i,j,p;
    /* Replace with your application code */
    while (1) 
    {
		for(j=0; j<=5;j++){
  ae:	60 e0       	ldi	r22, 0x00	; 0
  b0:	70 e0       	ldi	r23, 0x00	; 0
  b2:	37 c0       	rjmp	.+110    	; 0x122 <main+0xa0>
			for(i=0; i<=9; i++ ){
				for(p=1; p<=48; p++){
					Port_led = 0x01;
  b4:	21 e0       	ldi	r18, 0x01	; 1
  b6:	22 bb       	out	0x12, r18	; 18
					Port_led2 = n[j];
  b8:	fb 01       	movw	r30, r22
  ba:	ee 0f       	add	r30, r30
  bc:	ff 1f       	adc	r31, r31
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	30 e0       	ldi	r19, 0x00	; 0
  c2:	2c 0f       	add	r18, r28
  c4:	3d 1f       	adc	r19, r29
  c6:	e2 0f       	add	r30, r18
  c8:	f3 1f       	adc	r31, r19
  ca:	20 81       	ld	r18, Z
  cc:	25 bb       	out	0x15, r18	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ce:	e1 ee       	ldi	r30, 0xE1	; 225
  d0:	f4 e0       	ldi	r31, 0x04	; 4
  d2:	31 97       	sbiw	r30, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <main+0x50>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <main+0x56>
  d8:	00 00       	nop
					_delay_ms(5);
					Port_led = 0x02;
  da:	22 e0       	ldi	r18, 0x02	; 2
  dc:	22 bb       	out	0x12, r18	; 18
					Port_led2 = n[i];
  de:	fa 01       	movw	r30, r20
  e0:	ee 0f       	add	r30, r30
  e2:	ff 1f       	adc	r31, r31
  e4:	21 e0       	ldi	r18, 0x01	; 1
  e6:	30 e0       	ldi	r19, 0x00	; 0
  e8:	2c 0f       	add	r18, r28
  ea:	3d 1f       	adc	r19, r29
  ec:	e2 0f       	add	r30, r18
  ee:	f3 1f       	adc	r31, r19
  f0:	20 81       	ld	r18, Z
  f2:	25 bb       	out	0x15, r18	; 21
  f4:	e1 ee       	ldi	r30, 0xE1	; 225
  f6:	f4 e0       	ldi	r31, 0x04	; 4
  f8:	31 97       	sbiw	r30, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <main+0x76>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <main+0x7c>
  fe:	00 00       	nop
    /* Replace with your application code */
    while (1) 
    {
		for(j=0; j<=5;j++){
			for(i=0; i<=9; i++ ){
				for(p=1; p<=48; p++){
 100:	01 96       	adiw	r24, 0x01	; 1
 102:	02 c0       	rjmp	.+4      	; 0x108 <main+0x86>
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	81 33       	cpi	r24, 0x31	; 49
 10a:	91 05       	cpc	r25, r1
 10c:	98 f2       	brcs	.-90     	; 0xb4 <main+0x32>
	unsigned int i,j,p;
    /* Replace with your application code */
    while (1) 
    {
		for(j=0; j<=5;j++){
			for(i=0; i<=9; i++ ){
 10e:	4f 5f       	subi	r20, 0xFF	; 255
 110:	5f 4f       	sbci	r21, 0xFF	; 255
 112:	02 c0       	rjmp	.+4      	; 0x118 <main+0x96>
 114:	40 e0       	ldi	r20, 0x00	; 0
 116:	50 e0       	ldi	r21, 0x00	; 0
 118:	4a 30       	cpi	r20, 0x0A	; 10
 11a:	51 05       	cpc	r21, r1
 11c:	98 f3       	brcs	.-26     	; 0x104 <main+0x82>
	int n[10]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90};
	unsigned int i,j,p;
    /* Replace with your application code */
    while (1) 
    {
		for(j=0; j<=5;j++){
 11e:	6f 5f       	subi	r22, 0xFF	; 255
 120:	7f 4f       	sbci	r23, 0xFF	; 255
 122:	66 30       	cpi	r22, 0x06	; 6
 124:	71 05       	cpc	r23, r1
 126:	b0 f3       	brcs	.-20     	; 0x114 <main+0x92>
 128:	c2 cf       	rjmp	.-124    	; 0xae <main+0x2c>

0000012a <_exit>:
 12a:	f8 94       	cli

0000012c <__stop_program>:
 12c:	ff cf       	rjmp	.-2      	; 0x12c <__stop_program>
