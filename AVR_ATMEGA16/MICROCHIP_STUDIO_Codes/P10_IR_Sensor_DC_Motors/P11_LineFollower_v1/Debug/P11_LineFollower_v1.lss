
P11_LineFollower_v1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000222  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00800060  00000222  00000296  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002b2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002e4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000320  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000aaa  00000000  00000000  00000368  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006a8  00000000  00000000  00000e12  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003fe  00000000  00000000  000014ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000094  00000000  00000000  000018b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ce  00000000  00000000  0000194c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000343  00000000  00000000  00001d1a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  0000205d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e2       	ldi	r30, 0x22	; 34
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 37       	cpi	r26, 0x7C	; 124
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 b5 00 	call	0x16a	; 0x16a <main>
  7a:	0c 94 0f 01 	jmp	0x21e	; 0x21e <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <lcd_cmd>:
		number_data(number);
		lcd_data(arr[i]);
		lcd_cmd(0x06);
		_delay_ms(10);
	}
}
  82:	28 2f       	mov	r18, r24
  84:	20 7f       	andi	r18, 0xF0	; 240
  86:	2c 5f       	subi	r18, 0xFC	; 252
  88:	22 bb       	out	0x12, r18	; 18
  8a:	e3 ef       	ldi	r30, 0xF3	; 243
  8c:	f1 e0       	ldi	r31, 0x01	; 1
  8e:	31 97       	sbiw	r30, 0x01	; 1
  90:	f1 f7       	brne	.-4      	; 0x8e <lcd_cmd+0xc>
  92:	00 c0       	rjmp	.+0      	; 0x94 <lcd_cmd+0x12>
  94:	00 00       	nop
  96:	22 b3       	in	r18, 0x12	; 18
  98:	24 50       	subi	r18, 0x04	; 4
  9a:	22 bb       	out	0x12, r18	; 18
  9c:	82 95       	swap	r24
  9e:	92 95       	swap	r25
  a0:	90 7f       	andi	r25, 0xF0	; 240
  a2:	98 27       	eor	r25, r24
  a4:	80 7f       	andi	r24, 0xF0	; 240
  a6:	98 27       	eor	r25, r24
  a8:	8c 5f       	subi	r24, 0xFC	; 252
  aa:	82 bb       	out	0x12, r24	; 18
  ac:	83 ef       	ldi	r24, 0xF3	; 243
  ae:	91 e0       	ldi	r25, 0x01	; 1
  b0:	01 97       	sbiw	r24, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <lcd_cmd+0x2e>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <lcd_cmd+0x34>
  b6:	00 00       	nop
  b8:	82 b3       	in	r24, 0x12	; 18
  ba:	84 50       	subi	r24, 0x04	; 4
  bc:	82 bb       	out	0x12, r24	; 18
  be:	08 95       	ret

000000c0 <lcd_init>:
  c0:	82 e0       	ldi	r24, 0x02	; 2
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
  c8:	88 e2       	ldi	r24, 0x28	; 40
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
  d0:	8c e0       	ldi	r24, 0x0C	; 12
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
  d8:	08 95       	ret

000000da <lcd_data>:
  da:	28 2f       	mov	r18, r24
  dc:	20 7f       	andi	r18, 0xF0	; 240
  de:	2b 5f       	subi	r18, 0xFB	; 251
  e0:	22 bb       	out	0x12, r18	; 18
  e2:	e3 ef       	ldi	r30, 0xF3	; 243
  e4:	f1 e0       	ldi	r31, 0x01	; 1
  e6:	31 97       	sbiw	r30, 0x01	; 1
  e8:	f1 f7       	brne	.-4      	; 0xe6 <lcd_data+0xc>
  ea:	00 c0       	rjmp	.+0      	; 0xec <lcd_data+0x12>
  ec:	00 00       	nop
  ee:	22 b3       	in	r18, 0x12	; 18
  f0:	24 50       	subi	r18, 0x04	; 4
  f2:	22 bb       	out	0x12, r18	; 18
  f4:	82 95       	swap	r24
  f6:	92 95       	swap	r25
  f8:	90 7f       	andi	r25, 0xF0	; 240
  fa:	98 27       	eor	r25, r24
  fc:	80 7f       	andi	r24, 0xF0	; 240
  fe:	98 27       	eor	r25, r24
 100:	8b 5f       	subi	r24, 0xFB	; 251
 102:	82 bb       	out	0x12, r24	; 18
 104:	83 ef       	ldi	r24, 0xF3	; 243
 106:	91 e0       	ldi	r25, 0x01	; 1
 108:	01 97       	sbiw	r24, 0x01	; 1
 10a:	f1 f7       	brne	.-4      	; 0x108 <lcd_data+0x2e>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <lcd_data+0x34>
 10e:	00 00       	nop
 110:	82 b3       	in	r24, 0x12	; 18
 112:	84 50       	subi	r24, 0x04	; 4
 114:	82 bb       	out	0x12, r24	; 18
 116:	08 95       	ret

00000118 <string_data>:
 118:	0f 93       	push	r16
 11a:	1f 93       	push	r17
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	8c 01       	movw	r16, r24
 122:	c0 e0       	ldi	r28, 0x00	; 0
 124:	d0 e0       	ldi	r29, 0x00	; 0
 126:	12 c0       	rjmp	.+36     	; 0x14c <string_data+0x34>
 128:	f8 01       	movw	r30, r16
 12a:	ec 0f       	add	r30, r28
 12c:	fd 1f       	adc	r31, r29
 12e:	80 81       	ld	r24, Z
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	0e 94 6d 00 	call	0xda	; 0xda <lcd_data>
 136:	8f ec       	ldi	r24, 0xCF	; 207
 138:	97 e0       	ldi	r25, 0x07	; 7
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <string_data+0x22>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <string_data+0x28>
 140:	00 00       	nop
 142:	86 e0       	ldi	r24, 0x06	; 6
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
 14a:	21 96       	adiw	r28, 0x01	; 1
 14c:	f8 01       	movw	r30, r16
 14e:	01 90       	ld	r0, Z+
 150:	00 20       	and	r0, r0
 152:	e9 f7       	brne	.-6      	; 0x14e <string_data+0x36>
 154:	31 97       	sbiw	r30, 0x01	; 1
 156:	e0 1b       	sub	r30, r16
 158:	f1 0b       	sbc	r31, r17
 15a:	ec 17       	cp	r30, r28
 15c:	fd 07       	cpc	r31, r29
 15e:	20 f7       	brcc	.-56     	; 0x128 <string_data+0x10>
 160:	df 91       	pop	r29
 162:	cf 91       	pop	r28
 164:	1f 91       	pop	r17
 166:	0f 91       	pop	r16
 168:	08 95       	ret

0000016a <main>:



int main(void)
{
	DDRC = DDRD = 0xff;
 16a:	8f ef       	ldi	r24, 0xFF	; 255
 16c:	81 bb       	out	0x11, r24	; 17
 16e:	84 bb       	out	0x14, r24	; 20
	DDRA = 0xfe;
 170:	8e ef       	ldi	r24, 0xFE	; 254
 172:	8a bb       	out	0x1a, r24	; 26
	
	lcd_init();
 174:	0e 94 60 00 	call	0xc0	; 0xc0 <lcd_init>
	
	lcd_cmd(0x01);
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
	lcd_cmd(0x81);
 180:	81 e8       	ldi	r24, 0x81	; 129
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
	string_data("LINE FOLLOWER");
 188:	80 e6       	ldi	r24, 0x60	; 96
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	0e 94 8c 00 	call	0x118	; 0x118 <string_data>
	
	while(1)
	{
		if (PINA == 0b00000011)
 190:	89 b3       	in	r24, 0x19	; 25
 192:	83 30       	cpi	r24, 0x03	; 3
 194:	79 f4       	brne	.+30     	; 0x1b4 <main+0x4a>
		{
			PORTC = 0x09;
 196:	89 e0       	ldi	r24, 0x09	; 9
 198:	85 bb       	out	0x15, r24	; 21
			lcd_cmd(0x01);
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
			lcd_data(0xc1);
 1a2:	81 ec       	ldi	r24, 0xC1	; 193
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	0e 94 6d 00 	call	0xda	; 0xda <lcd_data>
			string_data("F");
 1aa:	8e e6       	ldi	r24, 0x6E	; 110
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	0e 94 8c 00 	call	0x118	; 0x118 <string_data>
 1b2:	ee cf       	rjmp	.-36     	; 0x190 <main+0x26>
			// _delay_ms(10);
		}else if (PINA == 0b00000010)
 1b4:	89 b3       	in	r24, 0x19	; 25
 1b6:	82 30       	cpi	r24, 0x02	; 2
 1b8:	79 f4       	brne	.+30     	; 0x1d8 <main+0x6e>
		{
			PORTC = 0x01;
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	85 bb       	out	0x15, r24	; 21
			lcd_cmd(0x01);
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
			lcd_data(0xc1);
 1c6:	81 ec       	ldi	r24, 0xC1	; 193
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	0e 94 6d 00 	call	0xda	; 0xda <lcd_data>
			string_data(" L ");
 1ce:	80 e7       	ldi	r24, 0x70	; 112
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	0e 94 8c 00 	call	0x118	; 0x118 <string_data>
 1d6:	dc cf       	rjmp	.-72     	; 0x190 <main+0x26>
			// _delay_ms(10);
		}else if (PINA == 0b00000001)
 1d8:	89 b3       	in	r24, 0x19	; 25
 1da:	81 30       	cpi	r24, 0x01	; 1
 1dc:	79 f4       	brne	.+30     	; 0x1fc <main+0x92>
		{
			PORTC = 0x08;
 1de:	88 e0       	ldi	r24, 0x08	; 8
 1e0:	85 bb       	out	0x15, r24	; 21
			lcd_cmd(0x01);
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
			lcd_data(0xc1);
 1ea:	81 ec       	ldi	r24, 0xC1	; 193
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	0e 94 6d 00 	call	0xda	; 0xda <lcd_data>
			string_data(" R ");
 1f2:	84 e7       	ldi	r24, 0x74	; 116
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	0e 94 8c 00 	call	0x118	; 0x118 <string_data>
 1fa:	ca cf       	rjmp	.-108    	; 0x190 <main+0x26>
			// _delay_ms(10);
		}else if (PINA == 0b00000000)
 1fc:	89 b3       	in	r24, 0x19	; 25
 1fe:	81 11       	cpse	r24, r1
 200:	c7 cf       	rjmp	.-114    	; 0x190 <main+0x26>
		{
			PORTC = 0x00;
 202:	15 ba       	out	0x15, r1	; 21
			lcd_cmd(0x01);
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
			lcd_data(0xc3);
 20c:	83 ec       	ldi	r24, 0xC3	; 195
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	0e 94 6d 00 	call	0xda	; 0xda <lcd_data>
			string_data(" S ");
 214:	88 e7       	ldi	r24, 0x78	; 120
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	0e 94 8c 00 	call	0x118	; 0x118 <string_data>
 21c:	b9 cf       	rjmp	.-142    	; 0x190 <main+0x26>

0000021e <_exit>:
 21e:	f8 94       	cli

00000220 <__stop_program>:
 220:	ff cf       	rjmp	.-2      	; 0x220 <__stop_program>
